Тема проекта: Комплект мини-игр с квестом
Описание проекта: Это приложение содержит множество различных игр, для снятия стресса и расслабления,
а также для увеличения концентрации на работе.
Задание проекта: Реализовать мини-игры и квест с использованием библиотеки PyQT, базы данных sqlite.
Список мини-игр: Это приложение содержит множество мини-игр, такие как змейка, пинг понг и т.д. Но главная особенность этого приложения в том, что это приложение содержит квест
со множеством альтернативных путей развития сюжетной линий.
Технические характеристики:
Чтобы реализовать этот проект нужно выбрать алгоритм решения задачи.
Вот список мини-игр: Поймай НЛО!, Змейка, Пинг-Понг, Квест, Стрельба по целям, Взлом.
Игра Поймай НЛО!
В игре пять обьектов: главный персонаж(игрок) и 4 противника. Цель игрока - поймать противников.
Управление - стрелки на клавиатуре. При нажатий одной из стрелок,
вызывается метод keyPressEvent и в этом методе происходит
движение игрока и остальных целей. Это значит, что игрок и НЛО
будут двигаться одновременно, что делает игру более сложной и увлекательной.
НЛО двигаются в случайном направлении.
Игра Змейка
Поле игры - клетчатое поле. Вверху экрана - табло очков.
А в оставшейся части - игровое поле. Змейка - это список
клеток на клетчатом поле. В начале инициализируется список координат
клеток, состоящий из кортежей двух целых чисел от 0 до 23.
В одной случайной клетке размещается еда. Движение происходит
путем изменения списка координат и перерисовки кадров.
Список координат изменяются так: происходит замена соседних
элементов. То есть, координаты последнего элементы станут равны
координатам предпоследнего и т.д. А координаты первого изменяются.
Это наиболее простой и эффективный способ, так как не нужно
изменять каждый элемент по отдельности, нужно только провести замену
и изменить оставшийся первый элемент. При поедании еды, в список
добавляется еще один элемент - координаты последней части змейки.
Через определённый промежуток времени происходит перерисовка
кадров. В нем закрашиваются клетки в котором находится змейка и клетка
в котором находится еда. Все координаты берутся из вышеописанного списка координат
змейки и двух переменных координат еды. Если головка змеи вышла за переделы
окна или пересеклась с собой(столкнулась) то завершаем игру.
Игра Пинг-Понг
В игре 4 обьекта - игрок 1, игрок 2, мяч и табло очков.
В начала игроки размещаются справа и слева, мяч по центру и табло сверху.
Выбирается случайное направление движения мяча по двум осям.
То есть в этом проекте выбираются случайные числа от -1 до 1 по
оси у и число 1 или -1 по оси х. И через каждый промежуток времени
это на это число изменяется координаты мяча, и таким образом он двигается.
Я выбрал этот метод, так как это самый простой и эффективный способ.
Чтобы осуществить отскок мяча, мы просто меняем соответствующие переменные
движения обьекта на отрицательные им числа. Благодаря этому движение мяча происходит
в обратном направлении. Это простейший способ реализации отскока.
Игра Квест
Квест состоит из программного кода, базы данных с таблицами истории и открытых концовок, текстовых файлов ситуаций и текстовых файлов концовок.
При старте открывается первый файл - начало сюжетной линии. Дальше будут открываться разные файлы в зависимости от выбранного действия игрока. Если игрок выбрал действие,
приводящее к концовке, то завершить игру и открыть концовку, а иначе продолжить игру.
Во время каждого действия в таблицу истории добавляется номер этого действия(1/2/3). Если игрок пришел к концовке и если эта концовка новая, то берем данные из истории и пишем в конец файла концовки. И когда во вкладке концовок мы открываем информацию насчет концовки, то будет показываться ключ к этой концовке. В разделе концовок можно посмотреть информацию насчет концовок. При нажатии одной из кнопок с номером, происходит поиск этого номера в БД открытых концовок. Если объект не найден, выводится «Концовка не открыта», иначе выводится краткий текст концовки и ключ к этой концовке. В игре, если открывается концовка и она новая, то добавляем его в БД открытых концовок id этой концовки. В игре также можно сменить обои. Для этого нужно войти в настройки и нажать одну из кнопок – «Задать фон главного меню» или «Задать фон квеста». При нажатии открывается диалоговое окно выбора файла. Вам нужно выбрать изображение. После нажатия ОК фон изменяется, и путь к этому изображению записывается в файл backgrounds.txt.
Как происходит чтение данных из файлов?
Текстовый файл состоит из текста ситуации, действия 1, действия 2 и действия 3, разделенные “-----“.
Все действия состоят из текста действий и номером, разделенные “---“. Тогда выходит 7 данных: текст ситуации, действие 1, 2, 3 и номер 1, 2, 3. Все эти данные
записываются в перменные и необходимы текст выводится на виджетах. При нажатии одной из кнопок вызывается соответсвующая функция и открывается следующяя страница с
соответствующим номером. Иногда определенное действие может привести к завершению игры, тогда вызывается метод завершения игры, происходит чтение файла концовки
с соответствующим номером и обьявляется окончание игры, выводится информация насчет концовки. Если эта концовка новая, добавляем ее в список открытых концовок
и добавляем ключ к этой концовке в файл концовки. При отображении информации насчет концовки в разделе Концовки, этот ключ также будет отображаться. Это
сделано для того, чтобы игроку не пришлось замарачиваться, чтобы найти определенную концовку.
Структура файлов концовок
Файлы концовок. Концовка состоит из двух частей, разделенных ‘-----’ – текст концовки и краткое описание концовки. Если концовка открыта, то добавляется еще одна часть – ключ к этой концовке.
Игра "Стрельба по целям" внутри квеста
Если игрок выполнил определенное действие, открывается эта игра. В этой игре несколько обьектов - игрок(пушка), 3 цели, табло очков.
Управление происходит при помощи клавиш стрелок вправо/влево для движения и ПРОБЕЛ для выстрела. Сначала случайным образом размещаются цели, выбирается направление
движения(вправо(1)/влево(-1)) целей. Затем игроку нужно поразить все эти цели за 3 попытки. За определенный промежуток времени цели будут двигаться
в заданном направлении(изменяем их координату в оси х на 1 или -1). При выстреле появляется шар из ствола пушки и движется
вверх, до тех пор, пока не поразит цель или не вылетит за пределы окна. Если игрок проиграл, передаем информацию о проигрыше и развиваем сюжетную линию
в негативную сторону, иначе в позитивную сторону.
Игра "Взлом" внутри квеста
Игра открывается если игрок выполнил определенное действие. В игре 4 обьекта - площадь, по которому движется стрелка, мишень, в который стрелка должна попасть и стрелка
движущаяся по площади и кнопка запуска. Суть игры в том, чтобы нажать кнопку тогда, когда стрелка будет находится на мишени. Если вы нажали кнопку в другое время -
игра будет окончена. Через определенный промежуток времени стрелка будет двигаться внутри площади влево/вправо и отскакивать от границ окна. При нажатии кнопка
вызывается метод проверки, если стрелка внутри мишени - количество очков увеличивается, инача игра будет закончена. При окончании игры передаются данные о проигрыше/победе
игрока и сюжетная линия будет развиваться в положительную/негативную сторону.
Ожидаемые технические показатели
Причина выбранных методов и способов решения этих хадач заключается в том, что эти способы, по нашим данным являются эффективными, простыми
и сокращают память и обьем кода в программе. Ожидается рост эффективности и производительности этой программы.
Использованные источники и модули
Библиотека PyQT5, внутри которого модули uic, QtMultimedia, QtCore, QtGui, Qt, QPixmap, QPalette, QBrush, QFont, QApplication, QFileDialog, QMainWindow, QLabel, QPushButton
Также использовалась библиотека sqlite3, random(choice, randrange).
Идея создания квеста - Игра "Невозможный квест", однако наш проект существенно различается как сюжетом, так и самим приложением.
Подробнее об этом проекте: Документация проекта, код проекта, .ехе файл проекта(в папке dist).
